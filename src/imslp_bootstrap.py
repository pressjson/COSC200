#!/usr/bin/env python3

import os
import subprocess


def get_imslp_files() -> None:
    """
    sets up ../data and curls files from IMSLP (see imslp_urls.txt for the full list of files)

    for each pdf file in imslp_urls.txt, a pdf file is downloaded into ../data/pdf_files

    dependencies:
        curl

    """

    url_file = "imslp_urls.txt"

    subprocess.run(["mkdir", "../data"])
    subprocess.run(["mkdir", "../data/pdf_files"])

    with open(url_file, "r") as infile:
        i = 0
        for url in infile:
            url = url.strip()
            command = [
                "curl",
                url,
                "--output",
                "../data/pdf_files/" + str(i) + ".pdf",
            ]
            print(command)
            subprocess.run(command)
            i = i + 1


def make_images() -> None:
    """
    converts the files in ../data/pdf_files into a series of jpg files in ../data/images

    dependencies:
        imagemagick
        the execution of get_imslp_files
    """

    subprocess.run(["mkdir", "../data/images"])

    i = 0
    for pdf_file in os.listdir("../data/pdf_files/"):
        command = [
            "magick",
            "-density",
            "300",
            "../data/pdf_files/" + pdf_file,
            "../data/images/" + str(i) + ".jpg",
        ]
        print(command)
        subprocess.run(command)
        i = i + 1


def make_image_pairs(cleanup: bool = True) -> None:
    """
    converts the jpgs in ../data/images into high quality/low quality image pairs in ../data/images/i

    low quality images are generated by shrinking the size to 25% and using jpeg artifacting with a
    compression quality of 15, and then rescaling the shrinked image to its original size

    dependencies:
        imagemagick
        the execution of make_images()

    args:
        cleanup (bool): toggles whether or not to remove the pdf images from ../data/images
    """
    i = 0

    for image in os.listdir("../data/images"):
        if not image.endswith(".jpg"):
            continue
        path = "../data/images/" + str(i)
        subprocess.run(["mkdir", path])
        command = [
            "magick",
            "-quality",
            "100",
            "../data/images/" + image,
            path + "/hq.jpg",
        ]
        print(command)
        subprocess.run(command)

        command = [
            "magick",
            "../data/images/" + image,
            "-resize",
            "25%",
            "-quality",
            "15",
            path + "/lq.jpg",
        ]
        print(command)
        subprocess.run(command)

        command = [
            "magick",
            path + "/lq.jpg",
            "-resize",
            "400%",
            "-quality",
            "100",
            path + "/lq.jpg",
        ]
        print(command)
        subprocess.run(command)

        if cleanup:
            subprocess.run(["rm", "../data/images/" + image])

        i = i + 1
